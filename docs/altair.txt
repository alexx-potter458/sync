# http://localhost:2022/graphql

mutation Login{
  login(loginInput: {
    email:"cosmin2l2ucain448@yahoo.com",
    password:"password"
  }){
    token
  }
}

mutation creeareuser{
  createUser(createUserInput: {
    email:"cosmin2l2ucain448@yahoo.com",
    password:"password"
    firstName:"Cos2min"
    lastName:"Luc2ian"
    userName:"cosminlcuain58"
    age:40
    jobId:10
    status:"Working"
  }){
    id
    email
    status
  }
}

query userLogat{
  loggedInUser{
    email
    id
    firstName
    lastName
    status
  }
}

mutation updateunuser{
  updateUser(updateUserInput: {
    email:"Alysha_Homenick108@hotmail.com"
    firstName:"Alysha"
    lastName:"Homenick"
  }){
    email
    firstName
    status
  }
}

# aici trebuie permisiune de admin
mutation updateAnyUser{
  updateUserAsAdmin(updateUserAsAdminInput: {
    id:1
    email:"DawnDickinson90@yahoo.com"
    firstName:"Dawn"
    lastName:"Dickinson"
  }){
    id
    email
    firstName
    lastName
    status
    jobId

  }
}

query AllUsersAndData{
  users{
    id
    email
    firstName
    lastName
    age
    jobId
    status
    posts{
      id
    }
    interests{
      name
    }
    friends{
      friend{
        id
        lastName
      }
    }
    jobs{
      id
      name
    }
    pendingFriendRequests{
      fromUserId
      toUserId
    }
    sentFriendRequests{
      fromUserId
      toUserId
    }

  }
}
query UserByIdAndData{
  user(id: 2){
    id
    email
    firstName
    lastName
    age
    jobId
    status
    posts{
      id
    }
    interests{
      name
    }
    friends{
      friend{
        id
        lastName
      }
    }
    jobs{
      id
      name
    }
    sentFriendRequests{
      fromUserId
      toUserId
    }
    pendingFriendRequests{
      fromUserId
      toUserId
    }
  }
}

query allJobs{
  jobs{
    name
  }
}

query GetJobById{
  job(id: 14){
    name
  }
}



query GetCompaniesAndUsers{
  companies{
    name
    users{
      id
      firstName
      lastName
    }
  }
}

query GetUsersByStatus{
  usersByStatus(status:"Open for work"){
    age
    firstName
    lastName
    status
  }
}

query AllInterests{
  interests{
    id
    name
    description
    status
  }
}
query InterestById{
  interest(id: 9){
    id
    name
    description
    status
  }
}

query AllPosts{
  posts{
    id
    postText
    author{
      lastName
    }
  }
}

query PostById{
  post(id: 10){
    id
    postText
  }
}

query allFriendsRequests{
  allFriendRequest{
    fromUserId
    toUserId
    status
  }
}



query loggedInUserInfo{
  loggedInUser{
    id
    email
    firstName
    lastName
    age
    jobId
    status
    interests{
      id
      name
    }
    sentFriendRequests{
      fromUserId

    }
    pendingFriendRequests{
      fromUserId

    }
    posts{
      id
    }
  }
}


mutation addPost{
  createPost(createPostInput: {
    postText:"ana are 3 mere"
  }){
    id
    postText
    author{
      email
      lastName
    }
  }
}

## adaugare interese dupa id sau nume
mutation addInterestToUserByInterestName{
  addInterestByInterestName(addInterestInput:{
    name:"Rustic Granite Pizza"
  }){
    id
    name
    description
    status


  }
}
mutation addInterestToUserByInterestId{
  addInterestByInterestId(addInterestInput:{
    id:26
  }){
    id
    name
    description
    status

  }
}


query test{
  loggedInUser{
    id
    interests{
      id
    }
  }

}


mutation deleteInterestForLoggedInUser{
  deleteInterest(id: 24){
    id
    name
    description
  }
}
###########3

mutation deletePostForLoggedInUser{
  deletePost(id: 199){
    id
  }
}

mutation deleteAnyPostAsAdmin{
  deletePostAsAdmin(id:35){
    id
  }
}


# nu pot sa le trimit celor cu care sunt prieten, si celor
# care mi-au dat deja o cerere
mutation sendFriendRequest{
  sendFriendRequest(id: 98)
}


mutation acceptFriendRequest{
  acceptFriendRequest(id: 99)
}


mutation rejectFriendRequest{
  rejectFriendRequest(id: 80)
}


# query test{
#   loggedInUser{
#     id
#     pendingFriendRequests{
#       fromUserId
#     }
#     sentFriendRequests{
#       fromUserId
#       toUserId
#     }
#     friends{
#       friend{
#         id
#       }
#     }
#   }

# }



mutation resignFromJob{
  resignFromJob
}

mutation getAJob{
  getAJob(jobId:4){
    name
    id
  }
}



#doar admin
mutation stergereUser{
  deleteUser(id: 2){
    id
    email
    firstName
    lastName
    age
    jobId
    status
  }
}